export default Ember.HTMLBars.template((function() {
  return {
    meta: {
      "fragmentReason": false,
      "revision": "Ember@2.4.1",
      "loc": {
        "source": null,
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 9,
          "column": 0
        }
      },
      "moduleName": "modules/ember-form-master-2000/templates/components/ember-form-master-2000/fm-radio.hbs"
    },
    isEmpty: false,
    arity: 0,
    cachedFragment: null,
    hasRendered: false,
    buildFragment: function buildFragment(dom) {
      var el0 = dom.createDocumentFragment();
      var el1 = dom.createElement("label");
      var el2 = dom.createTextNode("\n  ");
      dom.appendChild(el1, el2);
      var el2 = dom.createElement("input");
      dom.setAttribute(el2,"type","radio");
      dom.appendChild(el1, el2);
      var el2 = dom.createTextNode("\n  ");
      dom.appendChild(el1, el2);
      var el2 = dom.createComment("");
      dom.appendChild(el1, el2);
      var el2 = dom.createTextNode("\n  ");
      dom.appendChild(el1, el2);
      var el2 = dom.createComment("");
      dom.appendChild(el1, el2);
      var el2 = dom.createTextNode("\n");
      dom.appendChild(el1, el2);
      dom.appendChild(el0, el1);
      var el1 = dom.createTextNode("\n");
      dom.appendChild(el0, el1);
      return el0;
    },
    buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
      var element0 = dom.childAt(fragment, [0]);
      var element1 = dom.childAt(element0, [1]);
      if (this.cachedFragment) { dom.repairClonedNode(element1,[],true); }
      var morphs = new Array(5);
      morphs[0] = dom.createAttrMorph(element1, 'name');
      morphs[1] = dom.createAttrMorph(element1, 'value');
      morphs[2] = dom.createAttrMorph(element1, 'checked');
      morphs[3] = dom.createMorphAt(element0,3,3);
      morphs[4] = dom.createMorphAt(element0,5,5);
      return morphs;
    },
    statements: [
      ["attribute","name",["get","parentView.name",["loc",[null,[3,11],[3,26]]]]],
      ["attribute","value",["subexpr","get",[["get","content",["loc",[null,[4,16],[4,23]]]],["get","optionValuePath",["loc",[null,[4,24],[4,39]]]]],[],["loc",[null,[4,10],[4,41]]]]],
      ["attribute","checked",["get","checked",["loc",[null,[5,14],[5,21]]]]],
      ["inline","get",[["get","content",["loc",[null,[6,8],[6,15]]]],["get","optionLabelPath",["loc",[null,[6,16],[6,31]]]]],[],["loc",[null,[6,2],[6,33]]]],
      ["content","isSelected",["loc",[null,[7,2],[7,16]]]]
    ],
    locals: [],
    templates: []
  };
}()));