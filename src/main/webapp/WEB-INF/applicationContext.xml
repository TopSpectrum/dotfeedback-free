<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-4.1.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <beans>
        <import resource="classpath:common-applicationContext.xml"/>

        <import resource="applicationContext-persistence.xml"/>

        <!--<bean class="feedback.register.free.services.MockDomainRegistrationService"/>-->

        <bean id="domainRegistrationService" class="feedback.register.free.services.DefaultDomainRegistrationService"/>

        <bean id="internetBSClient" class="feedback.register.free.interop.internetbs.DefaultInternetBSClient">
            <property name="client" ref="client"/>
            <property name="apiKey" value="testapi"/>
            <property name="baseUrl" value="https://testapi.internet.bs"/>
            <property name="password" value="testpass"/>
        </bean>

        <bean class="feedback.register.free.services.DefaultApprovalService">

        </bean>

        <bean id="urlFactory" class="com.topspectrum.web.util.DefaultUrlFactory">
            <constructor-arg index="0" type="java.lang.String" value="${feedback.free.url}"/>
            <constructor-arg index="1" type="boolean" value="false"/>
        </bean>

        <bean id="fullDomainNameProvider" class="com.topspectrum.util.StaticFullDomainNameProvider">
            <property name="fullDomainNameWithSlug" value="free.feedback"/>
        </bean>

        <bean id="auditedEmailService" class="com.topspectrum.mail.DefaultEmailAuditService">
            <property name="productName" value="free.feedback"/>
        </bean>

        <bean id="googleDocService" class="com.topspectrum.services.CachedGoogleDocService">
            <property name="googleDocService">
                <bean class="com.topspectrum.services.DefaultGoogleDocService"/>
            </property>
        </bean>

        <!-- We are overriding this bean. It is normally imported from common-applicationContext.xml -> common-mail.xml -->
        <!--
         My goal is to override only the defaultFromAddress. Rather than go into the common-mail.xml file and change it (and then
         take the hour change) I'll just do this.
        -->
        <bean id="emailService" class="com.topspectrum.mail.DefaultEmailService">
            <property name="defaultFromAddress" value="${feedback.free.externalCompanyEmail}"/>
            <property name="javaMailSender">
                <bean class="org.springframework.mail.javamail.JavaMailSenderImpl">
                    <property name="host" value="email-smtp.us-west-2.amazonaws.com"/>
                    <property name="port" value="587"/>
                    <property name="username" value="AKIAJ4ATOGMGDPKH5PZQ"/>
                    <property name="password" value="AkkQMxRrbZ0uCcQIrOrn7r4ulqvQpDdFNmYeRH6tTVHc"/>
                    <property name="javaMailProperties">
                        <props>
                            <prop key="email.transport.protocol">smtp</prop>
                            <prop key="email.smtp.auth">true</prop>
                            <prop key="email.smtp.starttls.enable">true</prop>
                            <prop key="email.debug">true</prop>
                        </props>
                    </property>
                </bean>
            </property>
        </bean>

        <bean id="freeReservationWelcomeService" class="feedback.register.free.services.DefaultFreeReservationWelcomeService">
            <property name="templatedEmailService" ref="templatedEmailService"/>
        </bean>

        <bean id="verificationService" class="feedback.services.DefaultVerificationService" />

        <bean id="currentIPServletFilter" class="feedback.peoplestats.CurrentIPServletFilter"/>

        <bean id="whoisConnection" class="com.topspectrum.whois.WhoApiWhoisConnection">
            <property name="asyncHttpClient" ref="client"/>
        </bean>

        <bean id="feedbackWhoisConnection" class="com.topspectrum.whois.IanaWhoisConnection">
            <!--<property name="cacheService">-->
                <!--<bean class="com.topspectrum.cache.DiskCacheService"/>-->
            <!--</property>-->
        </bean>

        <bean id="xmlApiWhoisConnection" class="com.topspectrum.whois.WhoisXmlApiWhoisConnection">
            <property name="asyncHttpClient" ref="client"/>
        </bean>

        <!-- Because Maxmind API conflicts with TOR-->
        <bean id="locationService" class="com.topspectrum.location.MockLocationService"/>

        <bean id="emailTemplateService" class="com.topspectrum.template.DefaultEmailTemplateService">
            <property name="templateService">
                <bean class="com.topspectrum.template.ClassPathTemplateService">
                    <property name="resourceLoader">
                        <bean class="org.springframework.core.io.DefaultResourceLoader"/>
                    </property>
                </bean>
            </property>
        </bean>
    </beans>

</beans>