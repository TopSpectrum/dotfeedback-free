<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <import resource="classpath:common-properties.xml"/>

    <context:annotation-config/>
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <mvc:annotation-driven content-negotiation-manager="contentNegotiationManager" >
        <mvc:path-matching registered-suffixes-only="true" />

        <mvc:message-converters>
            <!-- This allows us to magically marshal objects in/out of json. -->
            <bean class="com.topspectrum.http.GsonHttpMessageConverter"/>
            <bean class="feedback.web.http.JavascriptHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.FormHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/plain;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="favorPathExtension" value="false" />
    </bean>

    <bean id="version.properties" class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="location" value="classpath:version.properties"/>
    </bean>

    <bean class="com.topspectrum.controllers.VersionController"/>

    <bean class="feedback.register.free.web.controllers.FreeDotFeedbackRootController"/>

    <bean id="compositeExceptionResolver"
          class="org.springframework.web.servlet.handler.HandlerExceptionResolverComposite">
        <property name="order" value="0"/>
        <property name="exceptionResolvers">
            <list>
                <bean class="com.topspectrum.spring.errors.LoggingHandlerExceptionResolver"/>

                <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
                    <property name="exceptionMappings">
                        <props>
                            <prop key="java.lang.ClassNotFoundException">404</prop>
                            <prop key="com.topspectrum.data.exceptions.NotFoundException">404</prop>
                            <prop key="org.springframework.web.servlet.NoHandlerFoundException">404</prop>
                        </props>
                    </property>
                    <property name="statusCodes">
                        <props>
                            <prop key="404">404</prop>
                            <prop key="500">500</prop>
                        </props>
                    </property>
                </bean>

                <bean class="feedback.oauth2.OAuth2ClientExceptionResolver"/>

                <bean class="org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver"/>

                <bean id="exceptionHandlerExceptionResolver"
                      class="org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver"/>

                <bean id="restExceptionResolver"
                      class="cz.jirutka.spring.exhandler.RestHandlerExceptionResolverFactoryBean">
                    <property name="messageSource" ref="httpErrorMessageSource"/>
                    <property name="defaultContentType" value="application/json"/>
                    <property name="exceptionHandlers">
                        <map>
                            <entry key="org.springframework.dao.EmptyResultDataAccessException" value="404"/>
                        </map>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="httpErrorMessageSource"
          class="org.springframework.security.core.SpringSecurityMessageSource">
        <!--<property templateName="basename" value="classpath:/org/example/errorMessages"/>-->
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>

</beans>